//spinning cube
:root {
  --face-size: 256px;
  --face-offset: calc(var(--face-size) / 2);
  --face-offset-reverse: calc(var(--face-size) / 2 * -1);
}

@-webkit-keyframes spin {
  0% {
    transform: rotateY(0) rotateX(0);
  }

  50% {
    transform: rotateY(1turn) rotateX(180deg);
  }

  to {
    transform: rotateY(2turn) rotateX(1turn);
  }
}

@keyframes spin {
  0% {
    transform: rotateY(0) rotateX(0);
  }

  50% {
    transform: rotateY(1turn) rotateX(180deg);
  }

  to {
    transform: rotateY(2turn) rotateX(1turn);
  }
}

section#visual {
  font: inherit;
}

#visual {
  float: right;
  transform: scale(0.25);
  margin: -7rem -4rem;
  z-index: -1;
}

#cube,
#cube img,
#visual {
  width: var(--face-size);
}

#cube {
  position: relative;
  -webkit-animation: spin 10s linear infinite;
  animation: spin 10s linear infinite;
  transform-style: preserve-3d;
  transform-origin: var(--face-offset) var(--face-offset);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  pointer-events: none;
}

#cube img {
  position: absolute;
  height: var(--face-size);
}

#cube .face-1 {
  transform: translateZ(var(--face-offset));
}

#cube .face-3 {
  transform: translateZ(var(--face-offset-reverse)) rotateY(180deg);
}

#cube .face-2 {
  transform: rotateY(-270deg) translateX(var(--face-offset));
  transform-origin: top right;
}

#cube .face-4 {
  transform: rotateY(270deg) translateX(var(--face-offset-reverse));
  transform-origin: center left;
}

#cube .face-0 {
  transform: rotateX(-90deg) translateY(var(--face-offset-reverse));
  transform-origin: top center;
}

#cube .face-5 {
  transform: rotateX(90deg) translateY(var(--face-offset));
  transform-origin: bottom center;
}

// Responsive embed video
.embed-responsive {
  height: 0;
  max-width: 100%;
  overflow: hidden;
  position: relative;
  padding-bottom: 56.25%;
  margin-top: 20px;

  iframe,
  object,
  embed {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    position: absolute;
    border: 0;
  }
}

// Animation fade-in
@keyframes fadein {
  0% {
    opacity: 0.2;
  }

  100% {
    opacity: 0.8;
  }
}

// Animation blur
@keyframes blur {
  0% {
    filter: blur(0px);
  }

  100% {
    filter: blur(4px);
  }
}

//toggle
.dark-mode-toggle {
  cursor: pointer;
  transform: scale(0.6);
}
.dark-mode-toggle input {
  display: none;
}
.dark-mode-toggle input + div {
  border-radius: 50%;
  width: 36px;
  height: 36px;
  position: relative;
  box-shadow: inset 16px -16px 0 0 #fff;
  transform: scale(1) rotate(-2deg);
  transition: box-shadow 0.5s ease 0s, transform 0.4s ease 0.1s;
}
.dark-mode-toggle input + div:before {
  content: "";
  width: inherit;
  height: inherit;
  border-radius: inherit;
  position: absolute;
  left: 0;
  top: 0;
  transition: background 0.3s ease;
}
.dark-mode-toggle input + div:after {
  content: "";
  width: 8px;
  height: 8px;
  border-radius: 50%;
  margin: -4px 0 0 -4px;
  position: absolute;
  top: 50%;
  left: 50%;
  box-shadow: 0 -23px 0 $dark-light, 0 23px 0 $dark-light, 23px 0 0 $dark-light,
    -23px 0 0 $dark-light, 15px 15px 0 $dark-light, -15px 15px 0 $dark-light,
    15px -15px 0 $dark-light, -15px -15px 0 $dark-light;
  transform: scale(0);
  transition: all 0.3s ease;
}

.dark-mode-toggle input:checked + div {
  box-shadow: inset 32px -32px 0 0 #fff;
  transform: scale(0.5) rotate(0deg);
  transition: transform 0.3s ease 0.1s, box-shadow 0.2s ease 0s;
}
.dark-mode-toggle input:checked + :before {
  background: $dark-light;
  transition: background 0.3s ease 0.1s;
}
.dark-mode-toggle input:checked + :after {
  transform: scale(1.5);
  transition: transform 0.5s ease 0.15s;
}